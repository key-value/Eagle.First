@model HtmlString
@{
    var selectTime = ViewBag.selectTime is DateTime ? (DateTime)ViewBag.selectTime : new DateTime();
}


<script src="~/Scripts/devexpress-web-14.1/js/globalize.min.js"></script>
<script src="~/Scripts/devexpress-web-14.1/js/dx.chartjs.js"></script>




<link rel="stylesheet" href="~/Scripts/daterangepicker/daterangepicker-bs3.css">
<script src="~/Scripts/datepicker/bootstrap-datepicker.js"></script>


<div id="CpuChart-part">
    <div class="row">
        <div class="col-sm-4">
            <div class="panel panel-default">
                <div class="panel-heading">
                    选择服务器
                </div>
                <div class="panel-body">

                    <div class="row">
                        <form role="form" class="form-horizontal">
                            <div class="form-group">
                                <label class="col-sm-3 control-label">日期</label>

                                <div class="col-sm-8">
                                    <div class="input-group">
                                        <input id="selectTime" type="text" class="form-control datepicker" data-format="D, dd MM yyyy">

                                        <div class="input-group-addon">
                                            <a href="#"><i class="linecons-calendar"></i></a>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-1"></div>
                            </div>

                            <div class="form-group-separator"></div>
                        </form>
                    </div>

                    <div>
                        <div class="list-group list-group-minimal text-center" data-bind="foreach: CpuChartBody.treeList">
                            <a href="#" class="list-group-item" data-bind="html:Name,value:ID, click: CpuChartBody.TreeClick.bind($data)">
                            </a>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12 text-center" data-bind="template:'page-template'">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-8">
            <div id="cpuIcon" class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Cpu 走势图</h3>
                    <div class="panel-options">
                        <a href="#" data-toggle="panel">
                            <span class="collapse-icon">&ndash;</span>
                            <span class="expand-icon">+</span>
                        </a>
                        <a href="#" data-toggle="remove">
                            &times;
                        </a>
                    </div>
                </div>
                <div class="panel-body">

                    <div id="bar-3" style="height: 400px; width: 100%;">
                    </div>
                </div>
            </div>

        </div>
    </div>


    <div class="row">
        <div class="col-sm-12">
            <div id="memoyIcon" class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">内存</h3>
                    <div class="panel-options">
                        <a href="#" data-toggle="panel">
                            <span class="collapse-icon">&ndash;</span>
                            <span class="expand-icon">+</span>
                        </a>
                        <a href="#" data-toggle="remove">
                            &times;
                        </a>
                    </div>
                </div>
                <div class="panel-body">
                    <div id="bar-1" style="height: 440px; width: 100%;"></div>
                    <br />
                </div>
            </div>

        </div>
    </div>

</div>
<script>

    var CpuChartBody;
    $().ready(function () {
        $('#selectTime').val('@selectTime');
        $('#cpuIcon').hide();
        $('#memoyIcon').hide();
        CpuChartBody = {
            Chartbag: ko.observableArray(),
            treeList: ko.mapping.fromJS(@Model),
            TreeClick: function (tree) {
                var day = $('#selectTime').val();
                $('#cpuIcon').show();
                $('#memoyIcon').show();
                $.post(window.mainModel.map() + '/Details', {
                    selectTime: day,
                    treeId: tree.ID(),
                }, function (data) {
                    var array = JSON.parse(data);

                    CpuChartBody.Chartbag([]);
                    var i = 0;
                    while (i < array.length) {
                        //console.log(array[i]);
                        CpuChartBody.Chartbag().push(array[i]);
                        i++;
                    }

                    $("#bar-3").dxChart({
                        dataSource: CpuChartBody.Chartbag(),
                        commonSeriesSettings: {
                            argumentField: "HourNum"
                        },
                        series: [
                            { valueField: "MaxNum", name: "最高值", color: "#cc3f44" },
                            { valueField: "AvgNum", name: "平均值", color: "#40bbea" },
                            //{ valueField: "africa", name: "Africa", color: "#8dc63f" }
                        ],
                        argumentAxis: {
                            grid: {
                                visible: true
                            }
                        },
                        tooltip: {
                            enabled: true
                        },
                        title: "  ",
                        legend: {
                            verticalAlignment: "bottom",
                            horizontalAlignment: "center"
                        },
                        commonPaneSettings: {
                            border: {
                                visible: true,
                                right: false
                            }
                        }
                    });

                    $("#bar-1").dxChart({
                        dataSource: CpuChartBody.Chartbag(),

                        commonSeriesSettings: {
                            argumentField: "HourNum",
                            type: "bar"
                        },

                        series: [
                                            {
                                                valueField: "AvgMemory", name: "平均值", label: {
                                                    visible: true,
                                                    customizeText: function () {
                                                        return this.valueText + " G";
                                                    }
                                                }, color: "#40bbea"
                                            },
                                            {
                                                valueField: "MaxMemory", name: "最大值", label: {
                                                    visible: true,
                                                    customizeText: function () {
                                                        return this.valueText + " G";
                                                    }
                                                }, color: "#cc3f44"
                                            }
                        ],
                        legend: {
                            verticalAlignment: "bottom",
                            horizontalAlignment: "center"
                        },
                    });

                    //console.log(CpuChartBody.Chartbag());
                });
            },
        };
        ko.applyBindings(CpuChartBody, $("#CpuChart-part")[0]);

    });

    function between(randNumMin, randNumMax) {
        var randInt = Math.floor((Math.random() * ((randNumMax + 1) - randNumMin)) + randNumMin);

        return randInt;
    }
</script>

<script src="~/Scripts/xenon-custom.js"></script>